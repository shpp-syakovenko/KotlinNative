package com.serglife.kotlinnative

fun main(){
    val test = "test"         // неизменяемая переменная (константа)
    var test2 = "test2"       // изменяемая переменная
    var name: String? = null  // нулабельная переменная (тоесть нужно указывать что переменная может хранить Null)
    name = "Sergey"
    name?.length              // безопаснуй вызов методов в нулабельной переменной
    name!!.length             // небезопасный вызов, так мы сообщаем что в переменной точно не будет Null
    name?.length ?: 0         // Оператор элвиса, если в переменной нал то вернет 0 иначе длину строки

    val result ="Name $name"                    // вставка переменных в строку
    val result2 = "Name length: ${name.length}" // вставка результата выражения в строку

}

/*
*  Константы обьявленные с помощю const должны быть или внутри object или внутри companion object
* их нельзя переопредилить, так же их значение должно быть извесно до компиляции (в них нельзя записать результат выражение
* в этом отличие от переменных обьявленных как val) так же в них содержаться примитивные типы такие как
* String, Int, Boolean
* */

class User{
    companion object{
        const val USER = "USER"
    }
}

object User2{
    const val USER_TWO = "user_2"
}